{"version":3,"sources":["webpack:///./app/components/Footer/style.css?30f7","webpack:///./app/components/TodoTextInput/style.css?71e8","webpack:///./app/components/TodoList/style.css?14c4","webpack:///./app/index.tsx","webpack:///./app/containers/App/style.css","webpack:///./app/models/TodoModel.ts","webpack:///./app/components/Footer/index.tsx","webpack:///./app/components/TodoTextInput/index.tsx","webpack:///./app/components/Header/index.tsx","webpack:///./app/components/TodoItem/index.tsx","webpack:///./app/components/TodoList/index.tsx","webpack:///./app/containers/App/index.tsx","webpack:///./app/actions/todos.ts","webpack:///./app/reducers/todos.ts","webpack:///./app/reducers/index.ts","webpack:///./app/middleware/logger.ts","webpack:///./app/store/index.ts","webpack:///./main.tsx","webpack:///./app/components/TodoItem/style.css?4c11"],"names":["module","exports","App","path","component","TodoModel","Filter","FILTER_TITLES","SHOW_ALL","SHOW_ACTIVE","SHOW_COMPLETED","Footer","filter","activeCount","completedCount","onClickFilter","onClickClearCompleted","renderTodoCount","useCallback","itemWord","className","count","renderFilterLink","selectedFilter","selected","style","cursor","onClick","children","renderClearButton","clearCompleted","normal","filters","Object","keys","map","key","TodoTextInput","placeholder","newTodo","onSave","inputText","setInputText","handleSubmit","event","text","currentTarget","value","trim","which","handleChange","target","handleBlur","classes","edit","new","type","autoFocus","onChange","onBlur","onKeyDown","Header","addTodo","fetch","handleSave","length","TodoItem","todo","editTodo","deleteTodo","completeTodo","editing","setEditing","handleDoubleClick","id","completed","view","toggle","checked","onDoubleClick","destroy","TodoList","todos","actions","hasIncompleted","useMemo","some","main","toggleAll","completeAll","FILTER_VALUES","FILTER_FUNCTIONS","history","location","dispatch","todoActions","handleClearCompleted","handleFilterChange","push","filteredTodos","TodoActions","Type","ADD_TODO","EDIT_TODO","DELETE_TODO","COMPLETE_TODO","COMPLETE_ALL","CLEAR_COMPLETED","FETCH","Promise","resolve","reject","setTimeout","result","useTodoActions","todoReducer","handleActions","state","action","payload","reduce","max","Math","console","log","rootReducer","logger","store","next","initialState","middleware","render","document","getElementById"],"mappings":"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","file":"app.f858d53f76f95bfb80b5.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"normal\":\"_11G5b\",\"filters\":\"_2Rdg5\",\"selected\":\"KA4tP\",\"count\":\"_2aiYj\",\"clearCompleted\":\"_2VhED\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"new\":\"_1LCq9\",\"edit\":\"_2TStV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"_1MAoA\",\"normal\":\"l9hMg\",\"editing\":\"_2LE8Z\",\"edit\":\"_3IEu8\",\"view\":\"cswuJ\",\"toggle\":\"_1euYG\",\"completed\":\"_1VEnC\",\"destroy\":\"_3_fjc\",\"toggleAll\":\"_1L1bM\"};","import React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { App as TodoApp } from 'app/containers/App';\nimport { hot } from 'react-hot-loader';\n\nexport const App = hot(module)(() => (\n  <Switch>\n    <Route path=\"/\" component={TodoApp} />\n  </Switch>\n));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"normal\":\"_1XP1U\"};","/** TodoMVC model definitions **/\n\nexport interface TodoModel {\n  id: number;\n  text: string;\n  completed: boolean;\n}\n\nexport namespace TodoModel {\n  export enum Filter {\n    SHOW_ALL = 'all',\n    SHOW_ACTIVE = 'active',\n    SHOW_COMPLETED = 'completed'\n  }\n}\n","import React from 'react';\nimport style from './style.css';\nimport classNames from 'classnames';\nimport { TodoModel } from 'app/models';\n\nexport const FILTER_TITLES = {\n  [TodoModel.Filter.SHOW_ALL]: 'All',\n  [TodoModel.Filter.SHOW_ACTIVE]: 'Active',\n  [TodoModel.Filter.SHOW_COMPLETED]: 'Completed'\n};\n\nexport namespace Footer {\n  export interface Props {\n    filter: TodoModel.Filter;\n    activeCount?: number;\n    completedCount?: number;\n    onClickFilter: (filter: TodoModel.Filter) => any;\n    onClickClearCompleted: () => any;\n  }\n}\n\nexport const Footer = ({\n  filter,\n  activeCount,\n  completedCount,\n  onClickFilter,\n  onClickClearCompleted\n}: Footer.Props): JSX.Element => {\n  const renderTodoCount = React.useCallback((): JSX.Element => {\n    const itemWord = activeCount === 1 ? ' item' : 'items';\n    return (\n      <span className={style.count}>\n        <strong>{activeCount || 'No'}</strong> {itemWord} left\n      </span>\n    );\n  }, [activeCount]);\n\n  const renderFilterLink = React.useCallback(\n    (selectedFilter: TodoModel.Filter): JSX.Element => {\n      return (\n        <a\n          className={classNames({ [style.selected]: filter === selectedFilter })}\n          style={{ cursor: 'pointer' }}\n          onClick={() => onClickFilter(selectedFilter)}\n          children={FILTER_TITLES[selectedFilter]}\n        />\n      );\n    },\n    [filter, onClickFilter]\n  );\n\n  const renderClearButton = React.useCallback((): JSX.Element | void => {\n    if (completedCount! > 0) {\n      return <button className={style.clearCompleted} onClick={onClickClearCompleted} children={'Clear completed'} />;\n    }\n  }, [completedCount]);\n\n  return (\n    <footer className={style.normal}>\n      {renderTodoCount()}\n      <ul className={style.filters}>\n        {(Object.keys(TodoModel.Filter) as (keyof typeof TodoModel.Filter)[]).map((key) => (\n          <li key={key} children={renderFilterLink(TodoModel.Filter[key])} />\n        ))}\n      </ul>\n      {renderClearButton()}\n    </footer>\n  );\n};\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport style from './style.css';\n\nexport namespace TodoTextInput {\n  export interface Props {\n    placeholder?: string;\n    newTodo?: boolean;\n    onSave: (text: string) => void;\n  }\n\n  export interface State {\n    text: string;\n  }\n}\n\nexport const TodoTextInput = ({ placeholder, newTodo, onSave }: TodoTextInput.Props): JSX.Element => {\n  const [inputText, setInputText] = useState('');\n\n  const handleSubmit = React.useCallback(\n    (event: React.KeyboardEvent<HTMLInputElement>) => {\n      const text = event.currentTarget.value.trim();\n      if (event.which === 13) {\n        onSave(text);\n        setInputText('');\n      }\n    },\n    [onSave, setInputText]\n  );\n\n  const handleChange = React.useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setInputText(event.target.value);\n    },\n    [setInputText]\n  );\n\n  const handleBlur = React.useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const text = event.currentTarget.value.trim();\n      if (!newTodo) {\n        onSave(text);\n      }\n    },\n    [onSave]\n  );\n\n  const classes = classNames(\n    {\n      [style.edit]: !newTodo,\n      [style.new]: newTodo\n    },\n    style.normal\n  );\n\n  return (\n    <input\n      className={classes}\n      type=\"text\"\n      autoFocus\n      placeholder={placeholder}\n      value={inputText}\n      onChange={handleChange}\n      onBlur={handleBlur}\n      onKeyDown={handleSubmit}\n    />\n  );\n};\n","import React from 'react';\nimport { TodoTextInput } from '../TodoTextInput';\nimport { TodoActions } from 'app/actions/todos';\n\nexport namespace Header {\n  export interface Props {\n    addTodo: typeof TodoActions.addTodo;\n    fetch: typeof TodoActions.fetch;\n  }\n}\n\nexport const Header = ({ addTodo, fetch }: Header.Props): JSX.Element => {\n  const handleSave = React.useCallback(\n    (text: string) => {\n      if (text.length) addTodo({ text });\n    },\n    [addTodo]\n  );\n\n  const handleFetch = () => {\n    fetch();\n  };\n\n  return (\n    <header>\n      <h1>Todos</h1>\n      <div onClick={handleFetch}>FETCH</div>\n      <TodoTextInput newTodo onSave={handleSave} placeholder=\"What needs to be done?\" />\n    </header>\n  );\n};\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport style from './style.css';\nimport { TodoModel } from 'app/models';\nimport { TodoActions } from 'app/actions';\nimport { TodoTextInput } from '../TodoTextInput';\n\nexport namespace TodoItem {\n  export interface Props {\n    todo: TodoModel;\n    editTodo: typeof TodoActions.editTodo;\n    deleteTodo: typeof TodoActions.deleteTodo;\n    completeTodo: typeof TodoActions.completeTodo;\n  }\n}\n\nexport const TodoItem = ({ todo, editTodo, deleteTodo, completeTodo }: TodoItem.Props) => {\n  const [editing, setEditing] = useState(false);\n\n  const handleDoubleClick = React.useCallback(() => {\n    setEditing(true);\n  }, [setEditing]);\n\n  const handleSave = React.useCallback(\n    (id: number, text: string) => {\n      if (text.length === 0) {\n        deleteTodo(id);\n      } else {\n        editTodo({ id, text });\n      }\n      setEditing(false);\n    },\n    [editTodo, deleteTodo, setEditing]\n  );\n\n  const classes = classNames({\n    [style.completed]: todo.completed,\n    [style.editing]: editing,\n    [style.normal]: !editing\n  });\n\n  return (\n    <li className={classes}>\n      {editing ? (\n        <TodoTextInput onSave={(text) => todo.id && handleSave(todo.id, text)} />\n      ) : (\n        <div className={style.view}>\n          <input\n            type=\"checkbox\"\n            className={style.toggle}\n            checked={todo.completed}\n            onChange={() => todo.id && completeTodo(todo.id)}\n          />\n          <label onDoubleClick={() => handleDoubleClick()}>{todo.text}</label>\n          <button\n            className={style.destroy}\n            onClick={() => {\n              if (todo.id) deleteTodo(todo.id);\n            }}\n          />\n        </div>\n      )}\n    </li>\n  );\n};\n","import React from 'react';\nimport style from './style.css';\nimport { TodoActions } from 'app/actions/todos';\nimport { TodoItem } from '../TodoItem';\nimport { TodoModel } from 'app/models/TodoModel';\n\nexport namespace TodoList {\n  export interface Props {\n    todos: TodoModel[];\n    actions: TodoActions;\n  }\n}\n\nexport const TodoList = ({ todos, actions }: TodoList.Props): JSX.Element => {\n  const hasIncompleted = React.useMemo(() => todos.some((todo) => !todo.completed), []);\n  return (\n    <section className={style.main}>\n      {hasIncompleted && (\n        <input className={style.toggleAll} type=\"checkbox\" checked={hasIncompleted} onChange={actions.completeAll} />\n      )}\n      <ul className={style.normal}>\n        {todos.map((todo) => (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n            completeTodo={actions.completeTodo}\n            deleteTodo={actions.deleteTodo}\n            editTodo={actions.editTodo}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n};\n","import React from 'react';\nimport style from './style.css';\nimport { RouteComponentProps } from 'react-router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useTodoActions } from 'app/actions';\nimport { RootState } from 'app/reducers';\nimport { TodoModel } from 'app/models';\nimport { Header, TodoList, Footer } from 'app/components';\n\nconst FILTER_VALUES = (Object.keys(TodoModel.Filter) as (keyof typeof TodoModel.Filter)[]).map(\n  (key) => TodoModel.Filter[key]\n);\n\nconst FILTER_FUNCTIONS: Record<TodoModel.Filter, (todo: TodoModel) => boolean> = {\n  [TodoModel.Filter.SHOW_ALL]: () => true,\n  [TodoModel.Filter.SHOW_ACTIVE]: (todo) => !todo.completed,\n  [TodoModel.Filter.SHOW_COMPLETED]: (todo) => todo.completed\n};\n\nexport namespace App {\n  export interface Props extends RouteComponentProps<void> {}\n}\n\nexport const App = ({ history, location }: App.Props) => {\n  const dispatch = useDispatch();\n  const todoActions = useTodoActions(dispatch);\n  const { todos, filter } = useSelector((state: RootState) => {\n    const hash = location?.hash?.replace('#', '');\n    return {\n      todos: state.todos,\n      filter: FILTER_VALUES.find((value) => value === hash) ?? TodoModel.Filter.SHOW_ALL\n    };\n  });\n\n  const handleClearCompleted = React.useCallback((): void => {\n    todoActions.clearCompleted();\n  }, [todoActions]);\n\n  const handleFilterChange = React.useCallback(\n    (filter: TodoModel.Filter): void => {\n      history.push(`#${filter}`);\n    },\n    [history]\n  );\n\n  const filteredTodos = React.useMemo(() => (filter ? todos.filter(FILTER_FUNCTIONS[filter]) : todos), [todos, filter]);\n  const activeCount = React.useMemo(() => todos.filter((todo) => !todo.completed).length, [todos]);\n  const completedCount = React.useMemo(() => todos.filter((todo) => todo.completed).length, [todos]);\n\n  return (\n    <div className={style.normal}>\n      <Header addTodo={todoActions.addTodo} fetch={todoActions.fetch} />\n      <TodoList todos={filteredTodos} actions={todoActions} />\n      <Footer\n        filter={filter}\n        activeCount={activeCount}\n        completedCount={completedCount}\n        onClickClearCompleted={handleClearCompleted}\n        onClickFilter={handleFilterChange}\n      />\n    </div>\n  );\n};\n","import { useMemo } from 'react';\nimport { Dispatch, bindActionCreators } from 'redux';\nimport { createAction } from 'redux-actions';\nimport { TodoModel } from 'app/models';\n\nexport namespace TodoActions {\n  export enum Type {\n    ADD_TODO = 'ADD_TODO',\n    EDIT_TODO = 'EDIT_TODO',\n    DELETE_TODO = 'DELETE_TODO',\n    COMPLETE_TODO = 'COMPLETE_TODO',\n    COMPLETE_ALL = 'COMPLETE_ALL',\n    CLEAR_COMPLETED = 'CLEAR_COMPLETED',\n    FETCH = 'FETCH'\n  }\n\n  export const addTodo = createAction<PartialPick<TodoModel, 'text'>>(Type.ADD_TODO);\n  export const editTodo = createAction<PartialPick<TodoModel, 'id'>>(Type.EDIT_TODO);\n  export const deleteTodo = createAction<TodoModel['id']>(Type.DELETE_TODO);\n  export const completeTodo = createAction<TodoModel['id']>(Type.COMPLETE_TODO);\n  export const completeAll = createAction(Type.COMPLETE_ALL);\n  export const clearCompleted = createAction(Type.CLEAR_COMPLETED);\n  export const fetch = () => (dispatch: Dispatch) =>\n    dispatch(\n      createAction(Type.FETCH, async () => {\n        let promise = new Promise(function (resolve, reject) {\n          setTimeout(() => resolve('done'), 1000);\n        });\n        const result = await promise;\n        await dispatch(completeAll());\n        return result;\n      })()\n    );\n}\n\nexport type TodoActions = Omit<typeof TodoActions, 'Type'>;\nexport const useTodoActions = (dispatch: Dispatch) => {\n  const { Type, ...actions } = TodoActions;\n  return useMemo(() => bindActionCreators(actions as any, dispatch), [dispatch]) as TodoActions;\n};\n","import { handleActions } from 'redux-actions';\nimport { RootState } from './state';\nimport { TodoActions } from 'app/actions/todos';\nimport { TodoModel } from 'app/models';\n\nconst initialState: RootState.TodoState = [\n  {\n    id: 1,\n    text: 'Use Redux',\n    completed: false\n  }\n];\n\nexport const todoReducer = handleActions<RootState.TodoState, TodoModel>(\n  {\n    [TodoActions.Type.ADD_TODO]: (state, action) => {\n      if (action.payload && action.payload.text) {\n        return [\n          {\n            id: state.reduce((max, todo) => Math.max(todo.id || 1, max), 0) + 1,\n            completed: false,\n            text: action.payload.text\n          },\n          ...state\n        ];\n      }\n      return state;\n    },\n    [TodoActions.Type.DELETE_TODO]: (state, action) => {\n      return state.filter((todo) => todo.id !== (action.payload as any));\n    },\n    [TodoActions.Type.EDIT_TODO]: (state, action) => {\n      return state.map((todo) => {\n        if (!todo || !action || !action.payload) {\n          return todo;\n        }\n        return (todo.id || 0) === action.payload.id ? { ...todo, text: action.payload.text } : todo;\n      });\n    },\n    [TodoActions.Type.COMPLETE_TODO]: (state, action) => {\n      return state.map((todo) =>\n        todo.id === (action.payload as any) ? { ...todo, completed: !todo.completed } : todo\n      );\n    },\n    [TodoActions.Type.COMPLETE_ALL]: (state, action) => {\n      return state.map((todo) => ({ ...todo, completed: true }));\n    },\n    [TodoActions.Type.CLEAR_COMPLETED]: (state, action) => {\n      return state.filter((todo) => todo.completed === false);\n    },\n    [TodoActions.Type.FETCH]: (state, action) => {\n      console.log('REDUCER ' + action.payload);\n      return state;\n    }\n  },\n  initialState\n);\n","import { combineReducers } from 'redux';\nimport { RootState } from './state';\nimport { todoReducer } from './todos';\n\nexport { RootState };\n\nexport const rootReducer = combineReducers<RootState>({\n  todos: todoReducer\n});\n","import { Middleware } from 'redux';\n\nexport const logger: Middleware = (store) => (next) => (action) => {\n  if (process.env.NODE_ENV !== 'production') {\n    console.log(action);\n  }\n  return next(action);\n};\n","import { Store, createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport promiseMiddleware from 'redux-promise';\nimport { RootState, rootReducer } from 'app/reducers';\nimport { logger, thunk } from 'app/middleware';\n\nexport function configureStore(initialState?: RootState): Store<RootState> {\n  let middleware = applyMiddleware(thunk, logger, promiseMiddleware);\n\n  if (process.env.NODE_ENV !== 'production') {\n    middleware = composeWithDevTools(middleware);\n  }\n\n  const store = createStore(rootReducer as any, initialState as any, middleware) as Store<RootState>;\n\n  if (module.hot) {\n    module.hot.accept('app/reducers', () => {\n      const nextReducer = require('app/reducers');\n      store.replaceReducer(nextReducer);\n    });\n  }\n\n  return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createBrowserHistory } from 'history';\nimport { configureStore } from 'app/store';\nimport { Router } from 'react-router';\nimport { App } from './app';\n\n// prepare store\nconst history = createBrowserHistory();\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"normal\":\"_3Ivjf\",\"toggle\":\"gyYcA\",\"destroy\":\"_6oXTL\",\"edit\":\"Dlke2\",\"editing\":\"atkUq _3Ivjf\",\"view\":\"R2I1d\",\"completed\":\"_2d4Cr\"};"],"sourceRoot":""}