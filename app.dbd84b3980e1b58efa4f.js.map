{"version":3,"sources":["webpack:///./app/middleware/logger.ts","webpack:///./app/reducers/index.ts","webpack:///./app/components/index.tsx","webpack:///./app/containers/App/index.tsx","webpack:///./app/index.tsx","webpack:///./app/store/index.ts","webpack:///./main.tsx"],"names":["logger","store","next","action","rootReducer","todos","state","Name","props","name","AppContainer","initialState","middleware","render","history","path","component","document","getElementById"],"mappings":"0LAEaA,EAAqB,SAACC,GAAU,gBAACC,GAAS,gBAACC,GAKtD,OAAOD,EAAKC,M,QCEP,IAAMC,EAAc,0BAA2B,CACpDC,MALF,SAAeC,GACb,YADa,IAAAA,MAAA,IACNA,KCKM,SAASC,EAAKC,GACnB,IAAAC,EAAA,EAAAA,KAER,OAAO,6BAAMA,GCXA,SAASC,IACtB,OACE,6BACE,kBAACH,EAAI,CAACE,KAAK,WCFV,ICGLE,EAEIC,ECAA,EAAU,cACV,GDDAA,EAAa,0BAAgB,IAAOZ,EAAQ,KAMlC,sBAAYI,EAAaO,EAAcC,ICHvD,IAASC,OACP,kBAAC,IAAQ,CAACZ,MAAO,GACf,kBAAC,IAAM,CAACa,QAAS,GACf,mBFXa,WAAM,OACvB,kBAAC,IAAM,KACL,kBAAC,IAAK,CAACC,KAAK,IAAIC,UAAWN,OESrB,QAGRO,SAASC,eAAe,W","file":"app.dbd84b3980e1b58efa4f.js","sourcesContent":["import { Middleware } from 'redux';\n\nexport const logger: Middleware = (store) => (next) => (action) => {\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line no-console\n    console.log(action);\n  }\n  return next(action);\n};\n","import { combineReducers } from 'redux';\nimport { RootState } from './state';\n\nexport { RootState };\n\nfunction todos(state = '') {\n  return state;\n}\n\nexport const rootReducer = combineReducers<RootState>({\n  todos,\n});\n","// export { Footer } from './Footer';\n// export { Header } from './Header';\n// export { TodoList } from './TodoList';\n// export { TodoItem } from './TodoItem';\n// export { TodoTextInput } from './TodoTextInput';\nimport React from 'react';\n\ntype NameProps = {\n  name: string;\n};\n\nexport default function Name(props: NameProps) {\n  const { name } = props;\n\n  return <div>{name}</div>;\n}\n","import React from 'react';\nimport Name from '../../components';\n\nexport default function AppContainer() {\n  return (\n    <div>\n      <Name name=\"vova2\" />\n    </div>\n  );\n}\n","import React from 'react';\nimport { Route, Switch } from 'react-router';\nimport AppContainer from './containers/App';\n\nexport const App = () => (\n  <Switch>\n    <Route path=\"/\" component={AppContainer} />\n  </Switch>\n);\n","import { Store, createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport promiseMiddleware from 'redux-promise';\nimport { logger, thunk } from '../middleware';\nimport { RootState, rootReducer } from '../reducers';\n\nexport default function configureStore(\n  initialState?: RootState\n): Store<RootState> {\n  let middleware = applyMiddleware(thunk, logger, promiseMiddleware);\n\n  if (process.env.NODE_ENV !== 'production') {\n    middleware = composeWithDevTools(middleware);\n  }\n\n  const store = createStore(rootReducer, initialState, middleware) as Store<\n    RootState\n  >;\n\n  return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createBrowserHistory } from 'history';\nimport { Router } from 'react-router';\nimport configureStore from './app/store';\nimport { App } from './app';\n\n// prepare store\nconst history = createBrowserHistory();\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}